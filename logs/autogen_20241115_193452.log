2024-11-15 19:34:52.730 | Process-4922 | Thread-4546778624 | AutogenGame | INFO | Starting Autogen CYOA game
2024-11-15 19:34:52.731 | Process-4922 | Thread-4546778624 | AutogenGame | INFO | Setting up agents
2024-11-15 19:34:52.732 | Process-4922 | Thread-4546778624 | httpx | DEBUG | load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-15 19:34:52.732 | Process-4922 | Thread-4546778624 | httpx | DEBUG | load_verify_locations cafile='/Users/ctavolazzi/.pyenv/versions/3.10.13/lib/python3.10/site-packages/certifi/cacert.pem'
2024-11-15 19:34:52.744 | Process-4922 | Thread-4546778624 | AutogenGame | INFO | Starting chat
2024-11-15 19:34:52.744 | Process-4922 | Thread-4546778624 | AutogenGame | INFO | AGENT_EVENT: {
  "event_type": "message_send",
  "sender": "user_proxy",
  "recipient": "assistant",
  "message_preview": "Create a text-based Choose Your Own Adventure game with the following requirements:\n1. Title: 'Teleport Massive CYOA'\n2. Start with Sam Iker waking from a dream about flying around a skyscraper\n3. Each scene should have 3 main choices plus an 'other' option\n4. Generate and use markdown files for scenarios\n5. Implement tracking tables for game state\n6. Include logging for all game actions\n7. Create a librarian function to manage game state\n8. Generate character dialogue based on current game stat",
  "timestamp": "2024-11-15T19:34:52.744461",
  "message_length": 628,
  "request_reply": false,
  "silent_mode": false
}
2024-11-15 19:34:52.746 | Process-4922 | Thread-4546778624 | AutogenGame | INFO | AGENT_EVENT: {
  "event_type": "message_receive",
  "receiver": "assistant",
  "sender": "user_proxy",
  "message_preview": "Create a text-based Choose Your Own Adventure game with the following requirements:\n1. Title: 'Teleport Massive CYOA'\n2. Start with Sam Iker waking from a dream about flying around a skyscraper\n3. Each scene should have 3 main choices plus an 'other' option\n4. Generate and use markdown files for scenarios\n5. Implement tracking tables for game state\n6. Include logging for all game actions\n7. Create a librarian function to manage game state\n8. Generate character dialogue based on current game stat",
  "timestamp": "2024-11-15T19:34:52.744781",
  "message_length": 628,
  "request_reply": false,
  "silent_mode": false
}
2024-11-15 19:34:52.804 | Process-4922 | Thread-4546778624 | openai._base_client | DEBUG | Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': "You are a Python developer creating a Choose Your Own Adventure game.\nYour code should implement:\n1. Text-based UI with three main choices plus an 'other' option\n2. Game starts with Sam Iker waking from a skyscraper dream\n3. Title: 'Teleport Massive CYOA'\n4. Logging system for game setup and execution\n5. Obsidian-style markdown files for events/choices\n6. Scenario generation using markdown files\n7. Tables for tracking:\n   - Scenario index\n   - Character stats/states\n   - Location stats/states\n   - Item stats/states\n   - Player actions\n8. Game state management via librarian function\n9. Character dialogue generation based on game state\n\nWrite code incrementally, testing each component. Use clear comments and logging.", 'role': 'system'}, {'content': "Create a text-based Choose Your Own Adventure game with the following requirements:\n1. Title: 'Teleport Massive CYOA'\n2. Start with Sam Iker waking from a dream about flying around a skyscraper\n3. Each scene should have 3 main choices plus an 'other' option\n4. Generate and use markdown files for scenarios\n5. Implement tracking tables for game state\n6. Include logging for all game actions\n7. Create a librarian function to manage game state\n8. Generate character dialogue based on current game state\n9. Keep the implementation clean and modular\n\nPlease start by creating the basic game structure and we'll build up from there.", 'role': 'user', 'name': 'user_proxy'}], 'model': 'gpt-4', 'stream': False}}
2024-11-15 19:34:52.831 | Process-4922 | Thread-4546778624 | openai._base_client | DEBUG | Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2024-11-15 19:34:52.832 | Process-4922 | Thread-4546778624 | httpcore.connection | DEBUG | connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2024-11-15 19:34:53.007 | Process-4922 | Thread-4546778624 | httpcore.connection | DEBUG | connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11b184ca0>
2024-11-15 19:34:53.007 | Process-4922 | Thread-4546778624 | httpcore.connection | DEBUG | start_tls.started ssl_context=<ssl.SSLContext object at 0x11b1117c0> server_hostname='api.openai.com' timeout=5.0
2024-11-15 19:34:54.095 | Process-4922 | Thread-4546778624 | httpcore.connection | DEBUG | start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11b145060>
2024-11-15 19:34:54.096 | Process-4922 | Thread-4546778624 | httpcore.http11 | DEBUG | send_request_headers.started request=<Request [b'POST']>
2024-11-15 19:34:54.097 | Process-4922 | Thread-4546778624 | httpcore.http11 | DEBUG | send_request_headers.complete
2024-11-15 19:34:54.097 | Process-4922 | Thread-4546778624 | httpcore.http11 | DEBUG | send_request_body.started request=<Request [b'POST']>
2024-11-15 19:34:54.097 | Process-4922 | Thread-4546778624 | httpcore.http11 | DEBUG | send_request_body.complete
2024-11-15 19:34:54.097 | Process-4922 | Thread-4546778624 | httpcore.http11 | DEBUG | receive_response_headers.started request=<Request [b'POST']>
2024-11-15 19:35:08.821 | Process-4922 | Thread-4546778624 | httpcore.http11 | DEBUG | receive_response_headers.failed exception=KeyboardInterrupt()
2024-11-15 19:35:08.822 | Process-4922 | Thread-4546778624 | httpcore.http11 | DEBUG | response_closed.started
2024-11-15 19:35:08.822 | Process-4922 | Thread-4546778624 | httpcore.http11 | DEBUG | response_closed.complete
